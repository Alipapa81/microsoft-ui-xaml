// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "InkToolBarMenuButton.h"

namespace winrt::Microsoft::UI::Xaml::Controls
{
    CppWinRTActivatableClassWithDPFactory(InkToolBarMenuButton)
}

#include "InkToolBarMenuButton.g.cpp"

GlobalDependencyProperty InkToolBarMenuButtonProperties::s_IsExtensionGlyphShownProperty{ nullptr };
GlobalDependencyProperty InkToolBarMenuButtonProperties::s_MenuKindProperty{ nullptr };

InkToolBarMenuButtonProperties::InkToolBarMenuButtonProperties()
{
    EnsureProperties();
}

void InkToolBarMenuButtonProperties::EnsureProperties()
{
    if (!s_IsExtensionGlyphShownProperty)
    {
        s_IsExtensionGlyphShownProperty =
            InitializeDependencyProperty(
                L"IsExtensionGlyphShown",
                winrt::name_of<bool>(),
                winrt::name_of<winrt::InkToolBarMenuButton>(),
                false /* isAttached */,
                ValueHelper<bool>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_MenuKindProperty)
    {
        s_MenuKindProperty =
            InitializeDependencyProperty(
                L"MenuKind",
                winrt::name_of<winrt::InkToolBarMenuKind>(),
                winrt::name_of<winrt::InkToolBarMenuButton>(),
                false /* isAttached */,
                ValueHelper<winrt::InkToolBarMenuKind>::BoxedDefaultValue(),
                nullptr);
    }
}

void InkToolBarMenuButtonProperties::ClearProperties()
{
    s_IsExtensionGlyphShownProperty = nullptr;
    s_MenuKindProperty = nullptr;
}

void InkToolBarMenuButtonProperties::IsExtensionGlyphShown(bool value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<InkToolBarMenuButton*>(this)->SetValue(s_IsExtensionGlyphShownProperty, ValueHelper<bool>::BoxValueIfNecessary(value));
    }
}

bool InkToolBarMenuButtonProperties::IsExtensionGlyphShown()
{
    return ValueHelper<bool>::CastOrUnbox(static_cast<InkToolBarMenuButton*>(this)->GetValue(s_IsExtensionGlyphShownProperty));
}

void InkToolBarMenuButtonProperties::MenuKind(winrt::InkToolBarMenuKind const& value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<InkToolBarMenuButton*>(this)->SetValue(s_MenuKindProperty, ValueHelper<winrt::InkToolBarMenuKind>::BoxValueIfNecessary(value));
    }
}

winrt::InkToolBarMenuKind InkToolBarMenuButtonProperties::MenuKind()
{
    return ValueHelper<winrt::InkToolBarMenuKind>::CastOrUnbox(static_cast<InkToolBarMenuButton*>(this)->GetValue(s_MenuKindProperty));
}
