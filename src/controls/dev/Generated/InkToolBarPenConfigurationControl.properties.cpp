// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "InkToolBarPenConfigurationControl.h"

namespace winrt::Microsoft::UI::Xaml::Controls
{
    CppWinRTActivatableClassWithDPFactory(InkToolBarPenConfigurationControl)
}

#include "InkToolBarPenConfigurationControl.g.cpp"

GlobalDependencyProperty InkToolBarPenConfigurationControlProperties::s_PenButtonProperty{ nullptr };

InkToolBarPenConfigurationControlProperties::InkToolBarPenConfigurationControlProperties()
{
    EnsureProperties();
}

void InkToolBarPenConfigurationControlProperties::EnsureProperties()
{
    if (!s_PenButtonProperty)
    {
        s_PenButtonProperty =
            InitializeDependencyProperty(
                L"PenButton",
                winrt::name_of<winrt::InkToolBarPenButton>(),
                winrt::name_of<winrt::InkToolBarPenConfigurationControl>(),
                false /* isAttached */,
                ValueHelper<winrt::InkToolBarPenButton>::BoxedDefaultValue(),
                nullptr);
    }
}

void InkToolBarPenConfigurationControlProperties::ClearProperties()
{
    s_PenButtonProperty = nullptr;
}

void InkToolBarPenConfigurationControlProperties::PenButton(winrt::InkToolBarPenButton const& value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<InkToolBarPenConfigurationControl*>(this)->SetValue(s_PenButtonProperty, ValueHelper<winrt::InkToolBarPenButton>::BoxValueIfNecessary(value));
    }
}

winrt::InkToolBarPenButton InkToolBarPenConfigurationControlProperties::PenButton()
{
    return ValueHelper<winrt::InkToolBarPenButton>::CastOrUnbox(static_cast<InkToolBarPenConfigurationControl*>(this)->GetValue(s_PenButtonProperty));
}
