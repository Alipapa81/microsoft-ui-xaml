// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "InkToolBarToolButton.h"

namespace winrt::Microsoft::UI::Xaml::Controls
{
    CppWinRTActivatableClassWithDPFactory(InkToolBarToolButton)
}

#include "InkToolBarToolButton.g.cpp"

GlobalDependencyProperty InkToolBarToolButtonProperties::s_IsExtensionGlyphShownProperty{ nullptr };

InkToolBarToolButtonProperties::InkToolBarToolButtonProperties()
{
    EnsureProperties();
}

void InkToolBarToolButtonProperties::EnsureProperties()
{
    if (!s_IsExtensionGlyphShownProperty)
    {
        s_IsExtensionGlyphShownProperty =
            InitializeDependencyProperty(
                L"IsExtensionGlyphShown",
                winrt::name_of<bool>(),
                winrt::name_of<winrt::InkToolBarToolButton>(),
                false /* isAttached */,
                ValueHelper<bool>::BoxedDefaultValue(),
                nullptr);
    }
}

void InkToolBarToolButtonProperties::ClearProperties()
{
    s_IsExtensionGlyphShownProperty = nullptr;
}

void InkToolBarToolButtonProperties::IsExtensionGlyphShown(bool value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<InkToolBarToolButton*>(this)->SetValue(s_IsExtensionGlyphShownProperty, ValueHelper<bool>::BoxValueIfNecessary(value));
    }
}

bool InkToolBarToolButtonProperties::IsExtensionGlyphShown()
{
    return ValueHelper<bool>::CastOrUnbox(static_cast<InkToolBarToolButton*>(this)->GetValue(s_IsExtensionGlyphShownProperty));
}
