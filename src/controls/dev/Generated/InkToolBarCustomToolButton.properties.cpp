// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "InkToolBarCustomToolButton.h"

namespace winrt::Microsoft::UI::Xaml::Controls
{
    CppWinRTActivatableClassWithDPFactory(InkToolBarCustomToolButton)
}

#include "InkToolBarCustomToolButton.g.cpp"

GlobalDependencyProperty InkToolBarCustomToolButtonProperties::s_ConfigurationContentProperty{ nullptr };

InkToolBarCustomToolButtonProperties::InkToolBarCustomToolButtonProperties()
{
    EnsureProperties();
}

void InkToolBarCustomToolButtonProperties::EnsureProperties()
{
    InkToolBarToolButton::EnsureProperties();
    if (!s_ConfigurationContentProperty)
    {
        s_ConfigurationContentProperty =
            InitializeDependencyProperty(
                L"ConfigurationContent",
                winrt::name_of<winrt::UIElement>(),
                winrt::name_of<winrt::InkToolBarCustomToolButton>(),
                false /* isAttached */,
                ValueHelper<winrt::UIElement>::BoxedDefaultValue(),
                nullptr);
    }
}

void InkToolBarCustomToolButtonProperties::ClearProperties()
{
    s_ConfigurationContentProperty = nullptr;
    InkToolBarToolButton::ClearProperties();
}

void InkToolBarCustomToolButtonProperties::ConfigurationContent(winrt::UIElement const& value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<InkToolBarCustomToolButton*>(this)->SetValue(s_ConfigurationContentProperty, ValueHelper<winrt::UIElement>::BoxValueIfNecessary(value));
    }
}

winrt::UIElement InkToolBarCustomToolButtonProperties::ConfigurationContent()
{
    return ValueHelper<winrt::UIElement>::CastOrUnbox(static_cast<InkToolBarCustomToolButton*>(this)->GetValue(s_ConfigurationContentProperty));
}
